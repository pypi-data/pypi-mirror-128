Metadata-Version: 2.1
Name: acidfile-optelgroup
Version: 1.2.2
Summary: ACID transaction with common files
Home-page: https://gitlab.com/optelgroup-public/acidfile/
Author: Roberto Abdelkader Martínez Pérez, Charles Brunet
Author-email: robertomartinezp@gmail.com, charles.brunet@optelgroup.com
License: LGPLv3
Project-URL: Original Project, https://pypi.org/project/acidfile/
Project-URL: Source, https://gitlab.com/optelgroup-public/acidfile/
Keywords: ACID,transactional file
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Embedded Systems
Classifier: Topic :: System :: Archiving
Description-Content-Type: text/x-rst
License-File: LICENSE

acidfile
========

This project was forked from https://github.com/nilp0inter/acidfile
to fix issues with more recent versions of Python.

`acidfile` module provides the ACIDFile object. This object can be used as a
regular file object but instead of write one copy of the data, it will write
several copies to disk in an ACID manner.

This algorithm was explained by `Elvis Pfützenreuter`_ in his blog post
`Achieving ACID transactions with common files`_.

Latest stable version can be found on `PyPI`_.

.. image:: https://img.shields.io/pypi/v/acidfile-optelgroup.svg
    :target: https://pypi.python.org/pypi/acidfile-optelgroup
    :alt: Latest PyPI version

`acidfile` is compatible with python 2.7, 3.6 and up, and pypy


Installation
------------

Latest version can be installed via `pip`

.. code-block:: bash

   $ pip install --upgrade acidfile-optelgroup


Running the tests
-----------------

Clone this repository and install the develop requirements.

.. code-block:: bash

   $ git clone https://gitlab.com/optelgroup-public/acidfile.git
   $ cd acidfile
   $ pip install -r requirements/develop.txt
   $ python setup.py develop
   $ tox


Usage examples
--------------


Basic usage
+++++++++++

.. code-block:: python

   >>> from acidfile import ACIDFile

   >>> myfile = ACIDFile('/tmp/myfile.txt', 'w')
   >>> myfile.write(b'Some important data.')
   >>> myfile.close()

At the close invocation two copies will be written to disk: *myfile.txt.0* and
below *myfile.txt.1*. Each one will have an creation timestamp and a HMAC
signature.

.. code-block:: python

   >>> myfile = ACIDFile('/tmp/myfile.txt', 'r')
   >>> print myfile.read()
   'Some important data.'
   >>> myfile.close()

If any of the files is damaged due to turning off without proper shutdown or
disk failure, manipulation, etc. It will be detected by the internal HMAC and
the other's file data would be used instead.

.. note:: If you want to read an `acidfile`, never pass the full path of the
   real file, instead use the file name that you use in the creation step.

   | ✗ ACIDFile('/tmp/myfile.txt.0', 'r')
   | ✗ ACIDFile('/tmp/myfile.txt.1', 'r')
   | ✓ ACIDFile('/tmp/myfile.txt', 'r')


Context manager
+++++++++++++++

ACIDFile can (and should) be used as a regular context manager:

.. code-block:: python

   >>> with ACIDFile('/tmp/myfile.txt', 'w') as myfile:
   ...     myfile.write(b'Some important data.')


Number of copies
++++++++++++++++

The number of inner copies of the data can be configured through the **copies**
parameter.


Checksum Key
++++++++++++

The key used for compute and check the internal HMAC signature can be setted
by the **key** parameter.

It's recommended to change that key in order to protect against fraud, making
more difficult for a tamperer to put a fake file in place of the legitimate
one.

.. _PyPI: https://pypi.python.org/pypi/acidfile-optelgroup
.. _Elvis Pfützenreuter: epx@epx.com.br
.. _Achieving ACID transactions with common files: http://epx.com.br/artigos/arqtrans_en.php


.. This is your project NEWS file which will contain the release notes.
.. Example: http://www.python.org/download/releases/2.6/NEWS.txt
.. The content of this file, along with README.rst, will appear in your
.. project's PyPI page.

News
====

1.2.2 (fork)
------------

* Fix missing parameter in hmac
* Add support to Python 3.6 - 3.10
* Rewrote the ci/cd pipeline using gitlab-ci


1.2.1
-----

* Using io.open in setup.py to read README and NEWS. This fix some
  problems installing the package.
* Python 3.4 support.


1.2.0
-----

* Python 2.6 support.
* Added Python 3.2 and pypy to tox tests.
* Added flattr button :D
* Fixed flake8 and pylint warnings.


1.1.0
-----

* Python 3 support.
* Changed testing framework to `behave` because python 3 support.
* Using `tox` for multiple python version testing.


1.0.0
-----

* First stable release.
* Documentation.


0.0.1
-----

* Initial development.


