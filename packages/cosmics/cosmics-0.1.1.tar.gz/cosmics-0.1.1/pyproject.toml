[tool.poetry]
name = "cosmics"
version = "0.1.1"
description = "Tools for an event-driven design following Cosmic Python"
packages = [{ include = "cosmics" }]
authors = ["Fabian Emmerich <gitlab@emmerichs.eu>"]
readme = "README.md"
homepage = "https://gitlab.com/emmerich-os/cosmics"
repository = "https://gitlab.com/emmerich-os/cosmics"

[tool.poetry.dependencies]
python = "^3.9"
psycopg2-binary = "^2.9.1"

# Extras for flakehell (flake8)
flakehell = { version = "^0.8.0", optional = true }
flake8 = { version = "^3.9.2", optional = true }
flake8-bandit = { version = "^2.1.2", optional = true }
flake8-blind-except = { version = "^0.2.0", optional = true }
flake8-builtins-unleashed = { version = "^1.3.1", optional = true }
flake8-bugbear = { version = "^20.11.1", optional = true }
flake8-comprehensions = { version = "^3.3.1", optional = true }
flake8-debugger = { version = "^4.0.0", optional = true }
flake8-docstrings = { version = "^1.5.0", optional = true }
flake8-eradicate = { version = "^1.0.0", optional = true }
flake8-mutable = { version = "^1.2.0", optional = true }
flake8-pytest-style = { version = "^1.3.0", optional = true }
flake8-simplify = { version = "^0.14.2", optional = true }
pep8-naming = { version = "^0.11.1", optional = true }
pydocstyle = { version = "^5.1.1", optional = true }
pyflakes = { version = "~2.3.0", optional = true }

[tool.poetry.dev-dependencies]
pre-commit = "^2.15.0"
pytest = "^6.2.5"
pytest-asyncio = "^0.16.0"
pytest-cov = "^3.0.0"

[tool.poetry.extras]
flakehell = [
    "flakehell",
    "flake8",
    "flake8-bandit",
    "flake8-blind-except",
    "flake8-builtins-unleashed",
    "flake8-bugbear",
    "flake8-comprehensions",
    "flake8-debugger",
    "flake8-docstrings",
    "flake8-eradicate",
    "flake8-mutable",
    "flake8-pytest-style",
    "flake8-simplify",
    "pep8-naming",
    "pydocstyle",
    "pyflakes"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
log_cli = false
addopts = "--cov=cosmics --cov-report term-missing"

[tool.flakehell]
show_source = true
format = "grouped"
max-line-length = 80
dictionaries = ["en_US", "python" , "technical"]  # flake8-spellcheck params
docstring-convention = "numpy"  # flake8-docstring param
exclude = [
    "**.idea/",
    "**__pycache__/",
    "*.log",
    "*.csv",
    "*.png",
    "*.pyc",
    "*.pyo",
    "*.iml",
    "*.xml",
    "*.cpy",
    "*.Dockerfile"]
extended_default_ignore = []  # Temporarily fix AttributeError

[tool.flakehell.plugins]
flake8-bandit = ["+*"]
flake8-blind-except = ["+*"]
flake8-builtins-unleashed = ["+*"]
flake8-bugbear = ["+*"]
flake8-comprehensions = ["+*"]
flake8-debugger = ["+*"]
flake8-docstrings = [
    "+*",
    "-D104",  # Missing docstring in public package
    "-D100"]  # Missing docstring in public module
flake8-eradicate = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-simplify = ["+*"]
pep8-naming = ["+*"]
pydocstyle = ["+*"]
pyflakes = ["+*"]

[tool.flakehell.exceptions."cosmics/testing/**"]
flake8-docstrings = ["-*"]

[tool.flakehell.exceptions."tests/**"]
flake8-docstrings = ["-*"]
flake8-bandit = ["-*"]
flake8-pytest-style = ["-PT006", "-PT011"]

[tool.flakehell.exceptions."**/__init__.py"]
pyflakes = ["-F401"]  # Imported but unused error

[tool.black]
max-line-length = 80

[mypy]
ignore-missing-imports = true

[tool.sphinx]
language = "en"
html_theme = "sphinx_rtd_theme"
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.coverage",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.napoleon",  # numpy style docstrings
    "sphinx.ext.todo",
    "sphinx.ext.viewcode"]
