from collections.abc import (
    Awaitable,
    Callable,
)
from typing import (
    Optional,
)

from minos.aggregate import (
    TransactionEntry,
)
from minos.networks import (
    BrokerRequest,
    Request,
    Response,
)


async def transactional_command(
    request: Request, inner: Callable[[Request], Awaitable[Optional[Response]]]
) -> Optional[Response]:
    """Execute the command transactionally if it comes from a saga.

    :param request: The request containing the data.
    :param inner: The inner handling function to be executed.
    :return: The response generated by the inner handling function.
    """
    if isinstance(request, BrokerRequest) and getattr(request.raw, "saga", None) is not None:
        async with TransactionEntry(uuid=request.raw.saga, autocommit=False):
            return await inner(request)

    return await inner(request)
