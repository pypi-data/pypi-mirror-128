Metadata-Version: 2.1
Name: pytest-pahrametahrize
Version: 1.0.0
Summary: Parametrize your tests with a Boston accent.
Home-page: https://github.com/sco1/
Author: sco1
Author-email: sco1.git@gmail.com
Requires-Python: >=3.7,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Pytest
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Typing :: Typed
Requires-Dist: pytest (>=6.0,<7.0)
Project-URL: Repository, https://github.com/sco1/pytest-pahrametahrize
Description-Content-Type: text/markdown

# pytest-pahrametahrize
[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/sco1/pytest-pahrametahrize/main.svg)](https://results.pre-commit.ci/latest/github/sco1/pytest-pahrametahrize/main)
[![Code style: black](https://img.shields.io/badge/code%20style-black-black)](https://github.com/psf/black)
[![Open in Visual Studio Code](https://open.vscode.dev/badges/open-in-vscode.svg)](https://open.vscode.dev/sco1/pytest-pahrametahrize)

Parametrize your tests with a Boston accent!

### Examples
```py
import pytest

TRUTHINESS_TEST_CASES = [
    (None, False),
    (False, False),
]


@pytest.mark.parametrize(("in_val", "truth_out"), TRUTHINESS_TEST_CASES)
def test_pahrametahrize(in_val, truth_out):
    assert bool(in_val) == truth_out
```


becomes: 
```py
import pytest

TRUTHINESS_TEST_CASES = [
    (None, False),
    (False, False),
]


@pytest.pahrametahrize(("in_val", "truth_out"), TRUTHINESS_TEST_CASES)
def test_pahrametahrize(in_val, truth_out):
    assert bool(in_val) == truth_out
```

Wicked pissah.

