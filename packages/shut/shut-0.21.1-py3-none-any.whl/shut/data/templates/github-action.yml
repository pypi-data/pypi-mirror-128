# This GitHub Actions workflow was automatically generated by Shut.
# Run `shut pkg update` to regenerate it.

name: "${workflow_name}"

on:
  push:
    branches: [ "${branch}" ]
% if pypi_publish:
    tags: [ '*' ]
% endif
% if pull_requests:
  pull_request:
    branches: [ "${branch}" ]
% endif

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${python_versions}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${"${{"} matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${"${{"} matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install ${shut_req}
    - name: Check package configuration
      run: IGNORE_GITHUB_ACTIONS_TEMPLATE=true shut pkg checks
    - name: Run unit tests and type checks
      run: shut pkg test --install${" --isolate" if isolated_unit_testing else ""} --no-capture
% if docs:

  documentation:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${python_versions[0]}
      uses: actions/setup-python@v2
      with:
        python-version: "${python_versions[0]}"
    - name: Install dependencies
      run: python -m pip install ${shut_req} mkdocs -q
    - name: Generate docs
      run: |
        echo "# Changelog" >docs/src/changelog.md
        shut changelog -a --markdown >>docs/src/changelog.md
        cd docs
        mkdocs build
    - name: Publish docs
      uses: JamesIves/github-pages-deploy-action@4.1.4
      if: github.ref == 'refs/heads/${branch}'
      with:
        branch: gh-pages
        folder: docs/site
        ssh-key: ${"${{"} secrets.DEPLOY_KEY }}
% endif
% if pypi_publish:

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${python_versions[0]}
      uses: actions/setup-python@v2
      with:
        python-version: "${python_versions[0]}"
    - name: Install dependencies
      run: python -m pip install ${shut_req}
    - name: Publish
      env:
        PYPI_TOKEN: ${"${{"} secrets.PYPI_TOKEN }}
        TESTPYPI_TOKEN: ${"${{"} secrets.TESTPYPI_TOKEN }}
      run: |
        git fetch --tags -q
        shut pkg update --verify-tag "$GITHUB_REF"
% if test_publish:
        shut pkg publish warehouse:pypi --test
% endif
        shut pkg publish warehouse:pypi
% endif
