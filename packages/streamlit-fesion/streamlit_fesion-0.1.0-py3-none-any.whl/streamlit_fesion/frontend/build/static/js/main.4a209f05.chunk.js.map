{"version":3,"sources":["ThemeProvider.tsx","PyodideProvider.tsx","camera.ts","ImageDataPreview.tsx","component-value.ts","MyComponent.tsx","index.tsx"],"names":["ThemeProvider","props","stTheme","useRenderData","theme","muiTheme","createTheme","palette","primary","main","primaryColor","background","default","backgroundColor","paper","secondaryBackgroundColor","text","textColor","typography","fontFamily","font","children","pyodideContext","React","createContext","undefined","PyodideProvider","useState","pyodide","setPyodide","useEffect","loadPyodide","indexURL","then","value","useMemo","Provider","stopStream","stream","getTracks","forEach","track","stop","ImageDataPreview","canvasRef","useRef","imageData","current","canvasElem","width","height","Streamlit","setFrameHeight","ctx","getContext","putImageData","ref","setComponentValue","componentValue","NUMPY_GLOBAL_ALIAS","MyComponent","renderData","imageFilterPyFuncDefCode","args","imageFilterPyFuncName","iamgeFilterDepPackages","imageFilterDepPackagesJson","JSON","stringify","imageDataFilter","setImageDataFilter","useContext","Error","usePyodide","pythonError","filterDepPackages","parse","a","loadPackage","runPythonAsync","loadPackagesFromImports","filterFn","self","fesionImageWidth","fesionImageHeight","fesionImageData","data","name","stack","message","setPlaying","outputImageProxy","globals","get","outputImageBuffer","getBuffer","destroy","outputWidth","outputHeight","newImageData","ImageData","Uint8ClampedArray","buffer","byteOffset","byteLength","release","fn","frame","setFrame","playing","play","useCallback","playingRef","onFrame","console","log","outImageData","videoConstraints","onFrameFnRef","unmounted","videoElem","document","createElement","canvasCtx","lastFrameTime","onAnimationFrame","paused","currentTime","drawImage","getImageData","window","requestAnimationFrame","navigator","mediaDevices","getUserMedia","video","audio","_stream","onloadedmetadata","videoWidth","videoHeight","srcObject","pause","remove","useCamera","Box","position","display","top","left","justifyContent","alignItems","CircularProgress","size","Button","variant","onClick","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.4a209f05.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  ThemeProvider as MuiThemeProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\nconst ThemeProvider: React.VFC<ThemeProviderProps> = (props) => {\n  const { theme: stTheme } = useRenderData();\n\n  if (stTheme == null) {\n    return <>props.children</>;\n  }\n\n  const muiTheme = createTheme({\n    palette: {\n      primary: {\n        main: stTheme.primaryColor,\n      },\n      background: {\n        default: stTheme.backgroundColor,\n        paper: stTheme.secondaryBackgroundColor,\n      },\n      text: {\n        primary: stTheme.textColor,\n      },\n    },\n    typography: {\n      fontFamily: stTheme.font,\n    },\n  });\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import React, { useState, useEffect, useMemo, useContext } from \"react\";\n\ninterface PyodideContextValue {\n  pyodide: Pyodide | undefined;\n}\nconst pyodideContext = React.createContext<PyodideContextValue | undefined>(\n  undefined\n);\n\nexport const usePyodide = (): Pyodide | undefined => {\n  const value = useContext(pyodideContext);\n  if (value == null) {\n    throw new Error(\"usePyodide() must be used inside <PyodideProvider />.\");\n  }\n  return value.pyodide;\n};\n\ninterface PyodideProviderProps {\n  children: React.ReactNode;\n}\nconst PyodideProvider: React.VFC<PyodideProviderProps> = (props) => {\n  const [pyodide, setPyodide] = useState<Pyodide>();\n\n  useEffect(() => {\n    loadPyodide({\n      indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\",\n    }).then(setPyodide);\n  }, []);\n\n  const value: PyodideContextValue = useMemo(\n    () => ({\n      pyodide,\n    }),\n    [pyodide]\n  );\n\n  return (\n    <pyodideContext.Provider value={value}>\n      {props.children}\n    </pyodideContext.Provider>\n  );\n};\n\nexport default PyodideProvider;\n","import { useEffect, useRef } from \"react\";\n\nfunction stopStream(stream: MediaStream): void {\n  stream.getTracks().forEach((track) => {\n    track.stop();\n  });\n}\n\ntype onFrameFn = (imageData: ImageData) => void | Promise<void>;\n\ninterface UseCameraOptions {\n  playing: boolean;\n  videoConstraints: MediaStreamConstraints[\"video\"];\n  onFrame: onFrameFn;\n}\nexport const useCamera = ({\n  playing,\n  videoConstraints,\n  onFrame,\n}: UseCameraOptions): void => {\n  const onFrameFnRef = useRef<onFrameFn>(onFrame);\n  onFrameFnRef.current = onFrame;\n\n  useEffect(() => {\n    if (!playing) {\n      return;\n    }\n\n    let unmounted = false;\n\n    const videoElem = document.createElement(\"video\");\n\n    const canvasElem = document.createElement(\"canvas\");\n    const canvasCtx = canvasElem.getContext(\"2d\"); // TODO: Check if another context type is better.\n\n    if (canvasCtx == null) {\n      throw new Error(\"Failed to get a canvas context.\");\n    }\n\n    let lastFrameTime: number | undefined = undefined;\n    const onAnimationFrame = async () => {\n      if (unmounted) {\n        return;\n      }\n\n      if (!videoElem.paused && videoElem.currentTime !== lastFrameTime) {\n        lastFrameTime = videoElem.currentTime;\n\n        canvasCtx.drawImage(videoElem, 0, 0);\n        const imageData = canvasCtx.getImageData(\n          0,\n          0,\n          canvasElem.width,\n          canvasElem.height\n        );\n\n        await onFrameFnRef.current(imageData); // NOTE: Wait for the promise resolution here, but parallel execution may also be an option.\n      }\n\n      window.requestAnimationFrame(onAnimationFrame);\n    };\n\n    let stream: MediaStream | null = null;\n    navigator.mediaDevices\n      .getUserMedia({\n        video: videoConstraints,\n        audio: false,\n      })\n      .then((_stream) => {\n        if (unmounted) {\n          stopStream(_stream);\n          return;\n        }\n\n        stream = _stream;\n\n        videoElem.onloadedmetadata = function () {\n          if (unmounted) {\n            return;\n          }\n\n          canvasElem.width = videoElem.videoWidth;\n          canvasElem.height = videoElem.videoHeight;\n          videoElem.play();\n\n          window.requestAnimationFrame(onAnimationFrame);\n        };\n\n        videoElem.srcObject = stream;\n      });\n\n    return () => {\n      unmounted = true;\n\n      videoElem.pause();\n      videoElem.remove();\n\n      canvasElem.remove();\n\n      if (stream) {\n        stopStream(stream);\n      }\n    };\n  }, [playing, videoConstraints]);\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\n\ninterface ImageDataPreviewProps {\n  imageData: ImageData;\n}\nconst ImageDataPreview: React.VFC<ImageDataPreviewProps> = (props) => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  const imageData = props.imageData;\n\n  // Size adjustment\n  useEffect(() => {\n    if (canvasRef.current == null) {\n      return;\n    }\n\n    const canvasElem = canvasRef.current;\n    canvasElem.width = imageData.width;\n    canvasElem.height = imageData.height;\n\n    Streamlit.setFrameHeight();\n    return () => {\n      Streamlit.setFrameHeight();\n    };\n  }, [imageData.width, imageData.height]);\n\n  // Draw canvas\n  useEffect(() => {\n    if (canvasRef.current == null) {\n      return;\n    }\n\n    const canvasElem = canvasRef.current;\n    const ctx = canvasElem.getContext(\"2d\");\n    ctx?.putImageData(imageData, 0, 0);\n  }, [imageData]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default ImageDataPreview;\n","import { Streamlit } from \"streamlit-component-lib\";\n\nexport interface ComponentValue {\n  pythonError: null | {\n    message: string;\n    stack: string;\n  };\n}\n\nexport function setComponentValue(componentValue: ComponentValue): void {\n  return Streamlit.setComponentValue(componentValue);\n}\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { useCamera } from \"./camera\";\nimport { usePyodide } from \"./PyodideProvider\";\nimport ImageDataPreview from \"./ImageDataPreview\";\nimport { setComponentValue } from \"./component-value\";\n\ntype ImageDataFilter = (imageData: ImageData) => Promise<ImageData>;\n\nconst NUMPY_GLOBAL_ALIAS = \"gai6sa2eM9Atiev5Shu5ohtie6phai8i\"; // To avoid name conflict\n\nconst MyComponent: React.VFC = () => {\n  const renderData = useRenderData();\n\n  const imageFilterPyFuncDefCode = renderData.args[\"func_def_code\"];\n  const imageFilterPyFuncName = renderData.args[\"func_name\"]; // TODO: Create a denied name list as a func_name, which are already used as global entity names, like `fesionImageWidth`.\n  const iamgeFilterDepPackages: string[] | null =\n    renderData.args[\"dep_packages\"];\n  const imageFilterDepPackagesJson = JSON.stringify(iamgeFilterDepPackages); // Serialize for memoization\n\n  const [imageDataFilter, setImageDataFilter] =\n    useState<{ fn: ImageDataFilter }>();\n\n  const pyodide = usePyodide();\n  useEffect(() => {\n    setComponentValue({ pythonError: null });\n\n    if (pyodide == null) {\n      return;\n    }\n\n    const filterDepPackages: string[] | null = JSON.parse(\n      imageFilterDepPackagesJson\n    );\n\n    (async () => {\n      // Import NumPy, which is used in the wrapper script.\n      await pyodide\n        .loadPackage([\"numpy\"])\n        .then(() =>\n          pyodide.runPythonAsync(`import numpy as ${NUMPY_GLOBAL_ALIAS}`)\n        );\n\n      // Load packages used in the user-defined filter function.\n      await pyodide.loadPackagesFromImports(imageFilterPyFuncDefCode);\n      if (filterDepPackages) {\n        await pyodide.loadPackage(filterDepPackages);\n      }\n\n      // TODO: Delete the previous filter func by running \"del {func_name}\" to avoid memory leak.\n\n      // Run the Python code including the user-defined filter function.\n      await pyodide.runPythonAsync(imageFilterPyFuncDefCode);\n\n      const filterFn: ImageDataFilter = async (imageData) => {\n        // TODO: Run in WebWorker\n        /* eslint-disable @typescript-eslint/ban-ts-comment */\n        // @ts-ignore\n        self.fesionImageWidth = imageData.width;\n        // @ts-ignore\n        self.fesionImageHeight = imageData.height;\n        // @ts-ignore\n        self.fesionImageData = imageData.data;\n        /* eslint-enable */\n\n        try {\n          await pyodide.runPythonAsync(`\n          from js import fesionImageWidth, fesionImageHeight, fesionImageData  # Import from JS globals\n\n          input_image4chan = ${NUMPY_GLOBAL_ALIAS}.asarray(fesionImageData.to_py()).reshape((fesionImageHeight, fesionImageWidth, 4)) # 4 channels (RGBA)\n          input_image = input_image4chan[:,:,:3]\n\n          output_image = ${imageFilterPyFuncName}(input_image)\n\n          if ${NUMPY_GLOBAL_ALIAS}.issubdtype(output_image.dtype, ${NUMPY_GLOBAL_ALIAS}.floating):\n              output_image = (output_image * 255).astype(${NUMPY_GLOBAL_ALIAS}.uint8)\n\n          output_alpha = ${NUMPY_GLOBAL_ALIAS}.full((fesionImageHeight, fesionImageWidth, 1), fill_value=255, dtype=${NUMPY_GLOBAL_ALIAS}.uint8)\n          output_image4chan = ${NUMPY_GLOBAL_ALIAS}.concatenate((output_image, output_alpha), axis=2).copy()\n\n          output_height, output_width = output_image4chan.shape[:2]\n          `);\n        } catch (err: any) {\n          if (err.name === \"PythonError\") {\n            const serializableError = {\n              stack: err.stack,\n              message: err.message,\n            };\n            setComponentValue({ pythonError: serializableError });\n          }\n          setPlaying(false);\n          throw err;\n        }\n\n        const outputImageProxy: PyProxy =\n          pyodide.globals.get(\"output_image4chan\");\n        const outputImageBuffer = outputImageProxy.getBuffer(\"u8\");\n        outputImageProxy.destroy();\n\n        const outputWidth: number = pyodide.globals.get(\"output_width\");\n        const outputHeight: number = pyodide.globals.get(\"output_height\");\n\n        try {\n          const newImageData = new ImageData(\n            new Uint8ClampedArray(\n              outputImageBuffer.data.buffer,\n              outputImageBuffer.data.byteOffset,\n              outputImageBuffer.data.byteLength\n            ),\n            outputWidth,\n            outputHeight\n          );\n          return newImageData;\n        } finally {\n          outputImageBuffer.release();\n        }\n      };\n\n      setImageDataFilter({ fn: filterFn });\n    })();\n  }, [\n    pyodide,\n    imageFilterPyFuncName,\n    imageFilterPyFuncDefCode,\n    imageFilterDepPackagesJson,\n  ]);\n\n  const [frame, setFrame] = useState<ImageData>();\n\n  const [playing, setPlaying] = useState(false);\n\n  const play = useCallback(() => setPlaying(true), []);\n  const stop = useCallback(() => {\n    setPlaying(false);\n    setFrame(undefined);\n  }, []);\n\n  const playingRef = useRef(false);\n  playingRef.current = playing;\n  const onFrame = useCallback(\n    async (imageData: ImageData) => {\n      if (pyodide == null) {\n        console.log(\"Pyodide is not loaded\");\n        return;\n      }\n      if (!imageDataFilter) {\n        console.log(\"Python packages have not been loaded.\");\n        setFrame(imageData);\n        return;\n      }\n\n      const outImageData = await imageDataFilter.fn(imageData);\n\n      // Here is called asynchronously, so use ref to check the `playing` value.\n      if (!playingRef.current) {\n        setFrame(undefined);\n        return;\n      }\n      setFrame(outImageData);\n    },\n    [pyodide, imageDataFilter]\n  );\n\n  useCamera({\n    playing,\n    videoConstraints: true,\n    onFrame,\n  });\n\n  return (\n    <Box>\n      <Box position=\"relative\" display=\"inline-block\">\n        {playing && !imageDataFilter && (\n          <Box\n            position=\"absolute\"\n            top={0}\n            left={0}\n            width=\"100%\"\n            height=\"100%\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress size={80} />\n          </Box>\n        )}\n        <Box>{frame && <ImageDataPreview imageData={frame} />}</Box>\n      </Box>\n      <Box>\n        {playing ? (\n          <Button variant=\"contained\" onClick={stop}>\n            Stop\n          </Button>\n        ) : (\n          <Button variant=\"contained\" onClick={play}>\n            Play\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyComponent;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\";\nimport PyodideProvider from \"./PyodideProvider\";\nimport MyComponent from \"./MyComponent\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <StreamlitProvider>\n      <ThemeProvider>\n        <PyodideProvider>\n          <MyComponent />\n        </PyodideProvider>\n      </ThemeProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}