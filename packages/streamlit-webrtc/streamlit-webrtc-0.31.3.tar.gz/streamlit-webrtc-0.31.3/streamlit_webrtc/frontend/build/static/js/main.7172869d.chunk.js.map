{"version":3,"sources":["ThemeProvider.tsx","MediaStreamPlayer.tsx","Placeholder.tsx","media-constraint.ts","webrtc/reducer.ts","webrtc/index.ts","component-value.ts","WebRtcStreamer.tsx","index.tsx","DeviceSelector.tsx"],"names":["ThemeProvider","props","stTheme","theme","muiTheme","React","useMemo","textColorScale","chroma","scale","textColor","backgroundColor","mode","createTheme","palette","primary","main","primaryColor","background","default","paper","secondaryBackgroundColor","text","secondary","hex","disabled","typography","fontFamily","font","children","MediaStreamPlayer","useEffect","Streamlit","setFrameHeight","hasVideo","stream","getVideoTracks","length","refCallback","useCallback","node","srcObject","refreshFrameHeight","videoProps","hidden","userDefinedVideoAttrs","style","autoPlay","controls","controlsList","crossOrigin","loop","mediaGroup","muted","playsInline","preload","height","poster","width","disablePictureInPicture","disableRemotePlayback","ref","onCanPlay","audioProps","userDefinedAudioAttrs","memo","useStyles","makeStyles","padding","spacing","display","justifyContent","alignItems","Placeholder","classes","Paper","className","elevation","loading","CircularProgress","fontSize","compileMediaConstraints","src","videoDeviceId","audioDeviceId","constraints","video","deviceId","audio","initialState","webRtcState","sdpOffer","signallingTimedOut","error","connectReducer","onComponentValueChange","state","action","nextState","type","offer","reducer","nextPlaying","playingChanged","nextSdpOffer","prevSdpOffer","console","log","playing","toJSON","isWebRtcMode","val","setupOffer","pc","createOffer","then","setLocalDescription","Promise","resolve","iceGatheringState","addEventListener","checkState","removeEventListener","localDescription","catch","err","setComponentValue","componentValue","WebRtcStreamerInner","constraintsFromPython","useState","devices","setDevices","videoInput","audioInput","signallingTimerRef","useRef","pcRef","useReducer","dispatch","start","a","current","setTimeout","config","rtcConfiguration","RTCPeerConnection","evt","streams","mediaStreamConstraints","navigator","mediaDevices","Error","getUserMedia","getTracks","forEach","track","addTrack","getTransceivers","direction","addTransceiver","startInner","stop","undefined","transceiver","getSenders","sender","close","stopInner","finally","sdpAnswerJson","remoteDescription","sdpAnswer","JSON","parse","setRemoteDescription","clearTimeout","desiredPlayingState","useWebRtc","buttonDisabled","receivable","isReceivable","transmittable","isTransmittable","videoEnabled","audioEnabled","handleDeviceSelect","Box","Alert","severity","name","message","py","videoHtmlAttrs","audioHtmlAttrs","Button","variant","onClick","color","DeviceSelector","onSelect","value","WebRtcStreamer","renderData","useRenderData","args","rtc_configuration","media_stream_constraints","video_html_attrs","audio_html_attrs","overrides","MuiCssBaseline","body","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","formControl","maxWidth","margin","minWidth","formButtonControl","marginBottom","selectEmpty","marginTop","DeviceSelecter","labelId","onChangeProp","onChange","e","selected","find","d","target","aria-label","setImmediate","map","device","label","DeviceSelectPopper","open","anchorEl","devicesMap","onSubmit","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","handleSubmit","preventDefault","originalBodyHeightRef","popperRefFn","popper","getElementsByTagName","window","getComputedStyle","scrollBottom","WebKitCSSMatrix","transform","m42","getBoundingClientRect","scrollHeight","placement","id","setOpen","setAnchorEl","setDevicesMap","unavailable","setUnavailable","onOpen","event","currentTarget","enumerateDevices","vidoeDevices","audioDevices","kind","push","onClose"],"mappings":"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","file":"static/js/main.7172869d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"streamlit-component-lib\";\nimport {\n  createTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@material-ui/core/styles\";\nimport chroma from \"chroma-js\";\n\ninterface StreamlitThemeProviderProps {\n  theme: Theme | undefined;\n}\nexport const ThemeProvider: React.VFC<\n  React.PropsWithChildren<StreamlitThemeProviderProps>\n> = (props) => {\n  const stTheme = props.theme;\n\n  const muiTheme = React.useMemo(() => {\n    if (stTheme == null) {\n      return undefined;\n    }\n\n    const textColorScale = chroma\n      .scale([stTheme.textColor, stTheme.backgroundColor])\n      .mode(\"lab\");\n\n    return createTheme({\n      palette: {\n        primary: {\n          main: stTheme.primaryColor,\n        },\n        background: {\n          default: stTheme.backgroundColor,\n          paper: stTheme.secondaryBackgroundColor,\n        },\n        text: {\n          primary: stTheme.textColor,\n          secondary: textColorScale(0.1).hex(),\n          disabled: textColorScale(0.5).hex(),\n        },\n      },\n      typography: {\n        fontFamily: stTheme.font,\n      },\n    });\n  }, [stTheme]);\n\n  if (muiTheme == null) {\n    return <>{props.children}</>;\n  }\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, {\n  useEffect,\n  useCallback,\n  VideoHTMLAttributes,\n  AudioHTMLAttributes,\n  HTMLAttributes,\n} from \"react\";\n\ntype UserDefinedHTMLVideoAttributes = Partial<\n  Omit<\n    VideoHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\ntype UserDefinedHTMLAudioAttributes = Partial<\n  Omit<\n    AudioHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\n\ninterface MediaStreamPlayerProps {\n  stream: MediaStream;\n  userDefinedVideoAttrs: UserDefinedHTMLVideoAttributes | undefined;\n  userDefinedAudioAttrs: UserDefinedHTMLAudioAttributes | undefined;\n}\nconst MediaStreamPlayer: React.VFC<MediaStreamPlayerProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const hasVideo = props.stream.getVideoTracks().length > 0;\n\n  const refCallback = useCallback(\n    (node: HTMLVideoElement | HTMLAudioElement | null) => {\n      if (node) {\n        node.srcObject = props.stream;\n      }\n    },\n    [props.stream]\n  );\n\n  const refreshFrameHeight = useCallback(() => Streamlit.setFrameHeight(), []);\n\n  if (hasVideo) {\n    // NOTE: Enumerate all allowed props instead of simply using spread operator\n    //       passing all the fields in props.userDefinedVideoAttrs\n    //       in order to block unexpected fields especially like dangerouslySetInnerHTML.\n    const videoProps: VideoHTMLAttributes<HTMLVideoElement> = {\n      hidden: props.userDefinedVideoAttrs?.hidden,\n      style: props.userDefinedVideoAttrs?.style,\n      autoPlay: props.userDefinedVideoAttrs?.autoPlay,\n      controls: props.userDefinedVideoAttrs?.controls,\n      controlsList: props.userDefinedVideoAttrs?.controlsList,\n      crossOrigin: props.userDefinedVideoAttrs?.crossOrigin,\n      loop: props.userDefinedVideoAttrs?.loop,\n      mediaGroup: props.userDefinedVideoAttrs?.mediaGroup,\n      muted: props.userDefinedVideoAttrs?.muted,\n      playsInline: props.userDefinedVideoAttrs?.playsInline,\n      preload: props.userDefinedVideoAttrs?.preload,\n      height: props.userDefinedVideoAttrs?.height,\n      poster: props.userDefinedVideoAttrs?.poster,\n      width: props.userDefinedVideoAttrs?.width,\n      disablePictureInPicture:\n        props.userDefinedVideoAttrs?.disablePictureInPicture,\n      disableRemotePlayback: props.userDefinedVideoAttrs?.disableRemotePlayback,\n    };\n\n    return (\n      <video {...videoProps} ref={refCallback} onCanPlay={refreshFrameHeight} />\n    );\n  } else {\n    const audioProps: AudioHTMLAttributes<HTMLAudioElement> = {\n      hidden: props.userDefinedAudioAttrs?.hidden,\n      style: props.userDefinedAudioAttrs?.style,\n      autoPlay: props.userDefinedAudioAttrs?.autoPlay,\n      controls: props.userDefinedAudioAttrs?.controls,\n      controlsList: props.userDefinedAudioAttrs?.controlsList,\n      crossOrigin: props.userDefinedAudioAttrs?.crossOrigin,\n      loop: props.userDefinedAudioAttrs?.loop,\n      mediaGroup: props.userDefinedAudioAttrs?.mediaGroup,\n      muted: props.userDefinedAudioAttrs?.muted,\n      playsInline: props.userDefinedAudioAttrs?.playsInline,\n      preload: props.userDefinedAudioAttrs?.preload,\n    };\n    return <audio ref={refCallback} {...audioProps} />;\n  }\n};\n\nexport default React.memo(MediaStreamPlayer);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport VideoLabelIcon from \"@material-ui/icons/VideoLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\ninterface PlaceholderProps {\n  loading: boolean;\n}\nconst Placeholder: React.VFC<PlaceholderProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <VideoLabelIcon fontSize=\"large\" />\n      )}\n    </Paper>\n  );\n};\n\nexport default React.memo(Placeholder);\n","export function compileMediaConstraints(\n  src: MediaStreamConstraints | undefined,\n  videoDeviceId: string | undefined,\n  audioDeviceId: string | undefined\n): MediaStreamConstraints {\n  const constraints = src || {};\n\n  if (videoDeviceId) {\n    if (constraints.video === true) {\n      constraints.video = {\n        deviceId: videoDeviceId,\n      };\n    } else if (\n      typeof constraints.video === \"object\" ||\n      constraints.video == null\n    ) {\n      constraints.video = {\n        ...constraints.video,\n        deviceId: videoDeviceId,\n      };\n    }\n  }\n\n  if (audioDeviceId) {\n    if (constraints.audio === true) {\n      constraints.audio = {\n        deviceId: audioDeviceId,\n      };\n    } else if (\n      typeof constraints.audio === \"object\" ||\n      constraints.audio == null\n    ) {\n      constraints.audio = {\n        ...constraints.audio,\n        deviceId: audioDeviceId,\n      };\n    }\n  }\n\n  return constraints;\n}\n\ninterface MediaUsage {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n}\nexport function getMediaUsage(constraintsFromPython: any): MediaUsage {\n  const videoEnabled = constraintsFromPython\n    ? !!constraintsFromPython.video\n    : true;\n  const audioEnabled = constraintsFromPython\n    ? !!constraintsFromPython.audio\n    : true;\n\n  return { videoEnabled, audioEnabled };\n}\n","import { ComponentValue } from \"../component-value\";\nimport { Action } from \"./actions\";\n\nexport type WebRtcState = \"STOPPED\" | \"SIGNALLING\" | \"PLAYING\" | \"STOPPING\";\nexport interface State {\n  webRtcState: WebRtcState;\n  sdpOffer: RTCSessionDescription | null;\n  signallingTimedOut: boolean;\n  stream: MediaStream | null;\n  error: Error | null;\n}\nexport const initialState: State = {\n  webRtcState: \"STOPPED\",\n  sdpOffer: null,\n  signallingTimedOut: false,\n  stream: null,\n  error: null,\n};\n\nexport const reducer: React.Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case \"SIGNALLING_START\":\n      return {\n        ...state,\n        webRtcState: \"SIGNALLING\",\n        stream: null,\n        error: null,\n        signallingTimedOut: false,\n      };\n    case \"SIGNALLING_TIMEOUT\":\n      return {\n        ...state,\n        signallingTimedOut: true,\n      };\n    case \"SET_STREAM\":\n      return {\n        ...state,\n        stream: action.stream,\n      };\n    case \"SET_OFFER\":\n      return {\n        ...state,\n        sdpOffer: action.offer,\n      };\n    case \"STOPPING\":\n      return {\n        ...state,\n        webRtcState: \"STOPPING\",\n        sdpOffer: null,\n      };\n    case \"STOPPED\":\n      return {\n        ...state,\n        webRtcState: \"STOPPED\",\n        sdpOffer: null,\n        stream: null,\n      };\n    case \"START_PLAYING\":\n      return {\n        ...state,\n        webRtcState: \"PLAYING\",\n        sdpOffer: null,\n      };\n    case \"PROCESS_ANSWER_ERROR\":\n      return {\n        ...state,\n        error: action.error,\n      };\n    case \"ERROR\":\n      return {\n        ...state,\n        webRtcState: \"STOPPED\",\n        sdpOffer: null,\n        error: action.error,\n      };\n  }\n};\n\nexport const connectReducer = (\n  onComponentValueChange: (newComponentValue: ComponentValue) => void\n): React.Reducer<State, Action> => {\n  const connectedReducer: React.Reducer<State, Action> = (state, action) => {\n    const nextState = reducer(state, action);\n\n    const nextPlaying = nextState.webRtcState === \"PLAYING\";\n    const prevPlaying = state.webRtcState === \"PLAYING\";\n    const playingChanged = nextPlaying !== prevPlaying;\n\n    const nextSdpOffer = nextState.sdpOffer;\n    const prevSdpOffer = state.sdpOffer;\n    const sdpOfferChanged = nextSdpOffer !== prevSdpOffer;\n\n    if (playingChanged || sdpOfferChanged) {\n      if (prevSdpOffer) {\n        console.log(\"Send SDP offer\", prevSdpOffer);\n      }\n      onComponentValueChange({\n        playing: nextPlaying,\n        sdpOffer: nextSdpOffer ? nextSdpOffer.toJSON() : \"\", // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so here an empty string is set instead when `sdpOffer` is undefined. // TODO: Create an issue\n      });\n    }\n\n    return nextState;\n  };\n\n  return connectedReducer;\n};\n","import { useReducer, useCallback, useRef, useEffect, useMemo } from \"react\";\nimport { compileMediaConstraints } from \"../media-constraint\";\nimport { ComponentValue } from \"../component-value\";\nimport { connectReducer, initialState } from \"./reducer\";\n\nexport type WebRtcMode = \"RECVONLY\" | \"SENDONLY\" | \"SENDRECV\";\nexport const isWebRtcMode = (val: unknown): val is WebRtcMode =>\n  val === \"RECVONLY\" || val === \"SENDONLY\" || val === \"SENDRECV\";\nexport const isReceivable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"RECVONLY\";\nexport const isTransmittable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"SENDONLY\";\n\nconst setupOffer = (\n  pc: RTCPeerConnection\n): Promise<RTCSessionDescription | null> => {\n  return pc\n    .createOffer()\n    .then((offer) => {\n      console.log(\"Created offer:\", offer);\n      return pc.setLocalDescription(offer);\n    })\n    .then(() => {\n      console.log(\"Wait for ICE gethering...\");\n      // Wait for ICE gathering to complete\n      return new Promise<void>((resolve) => {\n        if (pc.iceGatheringState === \"complete\") {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === \"complete\") {\n              pc.removeEventListener(\"icegatheringstatechange\", checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener(\"icegatheringstatechange\", checkState);\n        }\n      });\n    })\n    .then(() => {\n      const offer = pc.localDescription;\n      return offer;\n    })\n    .catch((err) => {\n      console.error(err);\n      throw err;\n    });\n};\n\nconst SIGNALLING_TIMEOUT = 10 * 1000;\n\nexport const useWebRtc = (\n  props: {\n    mode: WebRtcMode;\n    desiredPlayingState: boolean | undefined;\n    sdpAnswerJson: string | undefined;\n    rtcConfiguration: RTCConfiguration | undefined;\n    mediaStreamConstraints: MediaStreamConstraints | undefined;\n  },\n  videoInput: MediaDeviceInfo | null,\n  audioInput: MediaDeviceInfo | null,\n  onComponentValueChange: (newComponentValue: ComponentValue) => void\n) => {\n  // Initialize component value\n  useEffect(() => {\n    return onComponentValueChange({\n      playing: false,\n      sdpOffer: \"\",\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const signallingTimerRef = useRef<NodeJS.Timeout>();\n  const pcRef = useRef<RTCPeerConnection>();\n  const reducer = useMemo(\n    () => connectReducer(onComponentValueChange),\n    [onComponentValueChange]\n  );\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const start = useCallback(() => {\n    if (state.webRtcState !== \"STOPPED\") {\n      return;\n    }\n\n    const startInner = async () => {\n      dispatch({ type: \"SIGNALLING_START\" });\n      signallingTimerRef.current = setTimeout(() => {\n        dispatch({ type: \"SIGNALLING_TIMEOUT\" });\n      }, SIGNALLING_TIMEOUT);\n\n      const mode = props.mode;\n\n      const config: RTCConfiguration = props.rtcConfiguration || {};\n      console.log(\"RTCConfiguration:\", config);\n      const pc = new RTCPeerConnection(config);\n\n      // Connect received audio / video to DOM elements\n      if (mode === \"SENDRECV\" || mode === \"RECVONLY\") {\n        pc.addEventListener(\"track\", (evt) => {\n          const stream = evt.streams[0]; // TODO: Handle multiple streams\n          dispatch({ type: \"SET_STREAM\", stream });\n        });\n      }\n\n      // Set up transceivers\n      if (mode === \"SENDRECV\" || mode === \"SENDONLY\") {\n        const constraints = compileMediaConstraints(\n          props.mediaStreamConstraints,\n          videoInput?.deviceId,\n          audioInput?.deviceId\n        );\n        console.log(\"MediaStreamConstraints:\", constraints);\n\n        if (constraints.audio || constraints.video) {\n          if (navigator.mediaDevices == null) {\n            // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security\n            // > A secure context is, in short, a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n            throw new Error(\n              \"navigator.mediaDevices is undefined. It seems the current document is not loaded securely.\"\n            );\n          }\n          if (navigator.mediaDevices.getUserMedia == null) {\n            throw new Error(\"getUserMedia is not implemented in this browser\");\n          }\n\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          stream.getTracks().forEach((track) => {\n            pc.addTrack(track, stream);\n          });\n        }\n\n        if (mode === \"SENDONLY\") {\n          for (const transceiver of pc.getTransceivers()) {\n            transceiver.direction = \"sendonly\";\n          }\n        }\n      } else if (mode === \"RECVONLY\") {\n        pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n        pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n      }\n\n      console.log(\"transceivers\", pc.getTransceivers());\n\n      pcRef.current = pc;\n\n      await setupOffer(pc).then((offer) => {\n        if (offer == null) {\n          throw new Error(\"Failed to create an offer SDP\");\n        }\n\n        dispatch({ type: \"SET_OFFER\", offer });\n      });\n    };\n\n    startInner().catch((error) =>\n      dispatch({\n        type: \"ERROR\",\n        error,\n      })\n    );\n  }, [\n    audioInput?.deviceId,\n    props.mediaStreamConstraints,\n    props.mode,\n    props.rtcConfiguration,\n    state.webRtcState,\n    videoInput?.deviceId,\n  ]);\n\n  const stop = useCallback(() => {\n    const stopInner = async () => {\n      if (state.webRtcState === \"STOPPING\") {\n        return;\n      }\n\n      const pc = pcRef.current;\n      pcRef.current = undefined;\n\n      dispatch({ type: \"STOPPING\" });\n\n      if (pc == null) {\n        return;\n      }\n\n      // close transceivers\n      if (pc.getTransceivers) {\n        pc.getTransceivers().forEach(function (transceiver) {\n          if (transceiver.stop) {\n            transceiver.stop();\n          }\n        });\n      }\n\n      // close local audio / video\n      pc.getSenders().forEach(function (sender) {\n        sender.track?.stop();\n      });\n\n      // close peer connection\n      return new Promise<void>((resolve) => {\n        setTimeout(() => {\n          pc.close();\n          resolve();\n        }, 500);\n      });\n    };\n\n    stopInner()\n      .catch((error) => dispatch({ type: \"ERROR\", error }))\n      .finally(() => {\n        dispatch({ type: \"STOPPED\" });\n      });\n  }, [state.webRtcState]);\n\n  // processAnswer\n  useEffect(() => {\n    const pc = pcRef.current;\n    if (pc == null) {\n      return;\n    }\n\n    const sdpAnswerJson = props.sdpAnswerJson;\n    if (pc.remoteDescription == null) {\n      if (sdpAnswerJson && state.webRtcState === \"SIGNALLING\") {\n        const sdpAnswer = JSON.parse(sdpAnswerJson);\n        console.log(\"Receive answer sdpOffer\", sdpAnswer);\n        pc.setRemoteDescription(sdpAnswer)\n          .then(() => {\n            console.log(\"Remote description is set\");\n\n            if (signallingTimerRef.current) {\n              clearTimeout(signallingTimerRef.current);\n            }\n            dispatch({ type: \"START_PLAYING\" });\n          })\n          .catch((error) => {\n            dispatch({ type: \"PROCESS_ANSWER_ERROR\", error });\n            stop();\n          });\n      }\n    }\n  }, [props.sdpAnswerJson, state.webRtcState, stop]);\n\n  // reconcilePlayingState\n  useEffect(() => {\n    const desiredPlayingState = props.desiredPlayingState;\n    if (desiredPlayingState != null) {\n      if (desiredPlayingState === true && state.webRtcState === \"STOPPED\") {\n        start();\n      } else if (\n        desiredPlayingState === false &&\n        (state.webRtcState === \"SIGNALLING\" || state.webRtcState === \"PLAYING\")\n      ) {\n        stop();\n      }\n    }\n  }, [props.desiredPlayingState, start, state.webRtcState, stop]);\n\n  return {\n    start,\n    stop,\n    state,\n  };\n};\n","import { Streamlit } from \"streamlit-component-lib\";\n\nexport interface ComponentValue {\n  playing: boolean;\n  sdpOffer: string; // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so an empty string will be used here for that purpose. // TODO: Create an issue\n}\n\nexport function setComponentValue(componentValue: ComponentValue) {\n  return Streamlit.setComponentValue(componentValue);\n}\n","import React, { useState, useCallback } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeviceSelector from \"./DeviceSelector\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport MediaStreamPlayer from \"./MediaStreamPlayer\";\nimport Placeholder from \"./Placeholder\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport {\n  useWebRtc,\n  WebRtcMode,\n  isWebRtcMode,\n  isReceivable,\n  isTransmittable,\n} from \"./webrtc\";\nimport { getMediaUsage } from \"./media-constraint\";\nimport { ComponentValue, setComponentValue } from \"./component-value\";\nimport \"webrtc-adapter\";\n\ninterface WebRtcStreamerInnerProps {\n  disabled: boolean;\n  mode: WebRtcMode;\n  desiredPlayingState: boolean | undefined;\n  sdpAnswerJson: string | undefined;\n  rtcConfiguration: RTCConfiguration | undefined;\n  mediaStreamConstraints: MediaStreamConstraints | undefined;\n  videoHtmlAttrs: any;\n  audioHtmlAttrs: any;\n  onComponentValueChange: (newComponentValue: ComponentValue) => void;\n}\nconst WebRtcStreamerInner: React.VFC<WebRtcStreamerInnerProps> = (props) => {\n  const [devices, setDevices] = useState<{\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  }>({ video: null, audio: null });\n  const { state, start, stop } = useWebRtc(\n    props,\n    devices.video,\n    devices.audio,\n    props.onComponentValueChange\n  );\n\n  const mode = props.mode;\n  const buttonDisabled =\n    props.disabled ||\n    (state.webRtcState === \"SIGNALLING\" && !state.signallingTimedOut) || // Users can click the stop button after signalling timed out.\n    state.webRtcState === \"STOPPING\" ||\n    props.desiredPlayingState != null;\n  const receivable = isWebRtcMode(mode) && isReceivable(mode);\n  const transmittable = isWebRtcMode(mode) && isTransmittable(mode);\n  const { videoEnabled, audioEnabled } = getMediaUsage(\n    props.mediaStreamConstraints\n  );\n\n  const handleDeviceSelect = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevices({ video, audio });\n    },\n    []\n  );\n\n  return (\n    <Box>\n      {state.error && (\n        <Alert severity=\"error\">\n          {state.error.name}: {state.error.message}\n        </Alert>\n      )}\n      <Box py={1} display=\"flex\">\n        {state.stream ? (\n          <MediaStreamPlayer\n            stream={state.stream}\n            userDefinedVideoAttrs={props.videoHtmlAttrs}\n            userDefinedAudioAttrs={props.audioHtmlAttrs}\n          />\n        ) : (\n          receivable && (\n            <Placeholder loading={state.webRtcState === \"SIGNALLING\"} />\n          )\n        )}\n      </Box>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        {state.webRtcState === \"PLAYING\" ||\n        state.webRtcState === \"SIGNALLING\" ? (\n          <Button variant=\"contained\" onClick={stop} disabled={buttonDisabled}>\n            Stop\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={start}\n            disabled={buttonDisabled}\n          >\n            Start\n          </Button>\n        )}\n        {transmittable && (\n          <DeviceSelector\n            videoEnabled={videoEnabled}\n            audioEnabled={audioEnabled}\n            onSelect={handleDeviceSelect}\n            value={devices}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst WebRtcStreamer: React.VFC = () => {\n  const renderData = useRenderData();\n\n  const mode = renderData.args[\"mode\"];\n  const desiredPlayingState = renderData.args[\"desired_playing_state\"];\n  const sdpAnswerJson = renderData.args[\"sdp_answer_json\"];\n  const rtcConfiguration: RTCConfiguration = renderData.args.rtc_configuration;\n  const mediaStreamConstraints: MediaStreamConstraints =\n    renderData.args.media_stream_constraints;\n  const videoHtmlAttrs = renderData.args.video_html_attrs;\n  const audioHtmlAttrs = renderData.args.audio_html_attrs;\n\n  if (!isWebRtcMode(mode)) {\n    throw new Error(`Invalid mode ${mode}`);\n  }\n\n  return (\n    <ThemeProvider theme={renderData.theme}>\n      <WebRtcStreamerInner\n        disabled={renderData.disabled}\n        mode={mode}\n        desiredPlayingState={desiredPlayingState}\n        sdpAnswerJson={sdpAnswerJson}\n        rtcConfiguration={rtcConfiguration}\n        mediaStreamConstraints={mediaStreamConstraints}\n        videoHtmlAttrs={videoHtmlAttrs}\n        audioHtmlAttrs={audioHtmlAttrs}\n        onComponentValueChange={setComponentValue}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default WebRtcStreamer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\";\nimport WebRtcStreamer from \"./WebRtcStreamer\";\n\nconst theme = createTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          // Unset the background-color since <CssBaseLine /> applies the default Material Design background color\n          // (https://material-ui.com/components/css-baseline/#approach),\n          // which however does not match the Streamlit's background.\n          backgroundColor: \"initial\",\n        },\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <WebRtcStreamer />\n      </ThemeProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select, { SelectProps } from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper, { PopperProps } from \"@material-ui/core/Popper\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    maxWidth: \"80vw\",\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  formButtonControl: {\n    margin: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ninterface DevicesMap {\n  audio: MediaDeviceInfo[];\n  video: MediaDeviceInfo[];\n}\n\ninterface DeviceSelecterProps {\n  labelId: SelectProps[\"labelId\"];\n  value: MediaDeviceInfo | null;\n  devices: MediaDeviceInfo[];\n  onChange: (device: MediaDeviceInfo | null) => void;\n}\nconst DeviceSelecter = ({\n  labelId,\n  value,\n  devices,\n  onChange: onChangeProp,\n}: DeviceSelecterProps) => {\n  const classes = useStyles();\n\n  const onChange = useCallback<NonNullable<SelectProps[\"onChange\"]>>(\n    (e) => {\n      const selected = devices.find((d) => d.deviceId === e.target.value);\n      onChangeProp(selected || null);\n    },\n    [devices, onChangeProp]\n  );\n\n  if (devices.length === 0) {\n    return (\n      <Select value=\"\" disabled>\n        <option aria-label=\"None\" value=\"\" />\n      </Select>\n    );\n  }\n\n  if (value == null) {\n    setImmediate(() => onChangeProp(devices[0]));\n    return null;\n  }\n\n  return (\n    <Select\n      labelId={labelId}\n      value={value.deviceId}\n      onChange={onChange}\n      className={classes.selectEmpty}\n    >\n      {devices.map((device) => (\n        <MenuItem key={device.deviceId} value={device.deviceId}>\n          {device.label}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\ninterface DeviceSelectPopperProps {\n  open: boolean;\n  anchorEl: PopperProps[\"anchorEl\"];\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  devicesMap: DevicesMap;\n  onSubmit: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelectPopper = ({\n  open,\n  anchorEl,\n  videoEnabled,\n  audioEnabled,\n  value,\n  devicesMap,\n  onSubmit,\n}: DeviceSelectPopperProps) => {\n  const [selectedVideo, setSelectedVideo] = useState<MediaDeviceInfo | null>(\n    null\n  );\n  const [selectedAudio, setSelectedAudio] = useState<MediaDeviceInfo | null>(\n    null\n  );\n\n  useEffect(() => {\n    setSelectedVideo(\n      devicesMap.video.find((d) => d.deviceId === value.video?.deviceId) || null\n    );\n    setSelectedAudio(\n      devicesMap.audio.find((d) => d.deviceId === value.audio?.deviceId) || null\n    );\n  }, [devicesMap, value]);\n\n  const handleSubmit = useCallback<\n    NonNullable<React.ComponentProps<\"form\">[\"onSubmit\"]>\n  >(\n    (e) => {\n      e.preventDefault();\n      onSubmit(\n        videoEnabled ? selectedVideo : null,\n        audioEnabled ? selectedAudio : null\n      );\n    },\n    [onSubmit, videoEnabled, audioEnabled, selectedVideo, selectedAudio]\n  );\n\n  const classes = useStyles();\n\n  const originalBodyHeightRef = useRef<string>();\n  const popperRefFn = useCallback((popper: HTMLDivElement | null) => {\n    // Manage <body>'s height reacting to popper appearance.\n    if (popper) {\n      setTimeout(() => {\n        const body = document.getElementsByTagName(\"body\")[0];\n        originalBodyHeightRef.current = body.style.height;\n\n        const style = window.getComputedStyle(popper);\n        const matrix = new WebKitCSSMatrix(style.transform);\n        const translateY = matrix.m42;\n\n        const scrollBottom = translateY + popper.getBoundingClientRect().height;\n        if (scrollBottom > document.body.scrollHeight) {\n          body.style.height = `${scrollBottom}px`;\n          Streamlit.setFrameHeight();\n        }\n      }, 0);\n    } else {\n      const body = document.getElementsByTagName(\"body\")[0];\n      if (originalBodyHeightRef.current != null) {\n        body.style.height = originalBodyHeightRef.current;\n      }\n      Streamlit.setFrameHeight();\n    }\n  }, []);\n\n  return (\n    <Popper\n      ref={popperRefFn}\n      open={open}\n      anchorEl={anchorEl}\n      placement=\"left-end\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          {videoEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"video-input-select\">Video input</InputLabel>\n              <DeviceSelecter\n                labelId=\"video-input-select\"\n                devices={devicesMap.video}\n                value={selectedVideo}\n                onChange={setSelectedVideo}\n              />\n            </FormControl>\n          )}\n          {audioEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"audio-input-select\">Audio input</InputLabel>\n              <DeviceSelecter\n                labelId=\"audio-input-select\"\n                devices={devicesMap.audio}\n                value={selectedAudio}\n                onChange={setSelectedAudio}\n              />\n            </FormControl>\n          )}\n          <FormControl className={classes.formButtonControl}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              OK\n            </Button>\n          </FormControl>\n        </form>\n      </Paper>\n    </Popper>\n  );\n};\n\ninterface DeviceSelectorProps {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  onSelect: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelector = ({\n  videoEnabled,\n  audioEnabled,\n  value,\n  onSelect,\n}: DeviceSelectorProps) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [devicesMap, setDevicesMap] = useState<DevicesMap>();\n  const [unavailable, setUnavailable] = useState(false);\n\n  const onOpen = useCallback<NonNullable<ButtonProps[\"onClick\"]>>((event) => {\n    setAnchorEl(event.currentTarget);\n\n    if (typeof navigator?.mediaDevices?.enumerateDevices !== \"function\") {\n      setDevicesMap(undefined);\n      setUnavailable(true);\n      return;\n    }\n\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const vidoeDevices = [];\n      const audioDevices = [];\n      for (const device of devices) {\n        if (device.kind === \"videoinput\") {\n          vidoeDevices.push(device);\n        } else if (device.kind === \"audioinput\") {\n          audioDevices.push(device);\n        }\n      }\n      setDevicesMap({\n        video: vidoeDevices,\n        audio: audioDevices,\n      });\n      setOpen(true);\n    });\n  }, []);\n  const onClose = useCallback(() => setOpen(false), []);\n\n  const onSubmit = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevicesMap(undefined);\n      setOpen(false);\n      onSelect(video, audio);\n    },\n    [onSelect]\n  );\n\n  return (\n    <Box>\n      {unavailable && <p>Unavailable</p>}\n      {devicesMap && (\n        <DeviceSelectPopper\n          open={open}\n          anchorEl={anchorEl}\n          videoEnabled={videoEnabled}\n          audioEnabled={audioEnabled}\n          value={value}\n          devicesMap={devicesMap}\n          onSubmit={onSubmit}\n        />\n      )}\n      <Button onClick={open ? onClose : onOpen}>Select device</Button>\n    </Box>\n  );\n};\n\nexport default React.memo(DeviceSelector);\n"],"sourceRoot":""}