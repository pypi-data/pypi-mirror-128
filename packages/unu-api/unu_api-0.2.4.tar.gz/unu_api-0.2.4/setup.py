# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['unu_api']

package_data = \
{'': ['*']}

install_requires = \
['requests>=2.26.0,<3.0.0']

setup_kwargs = {
    'name': 'unu-api',
    'version': '0.2.4',
    'description': 'Библиотека для интеграции с биржой микрозадач unu.im',
    'long_description': '# UNU_API\n\nБиблиотека для интеграции с биржой микрозадач https://unu.im\n\n## Содержание\n\n  - [Как работает UNU?](#как-работает-unu)\n  - [Доступные типы задач](#доступные-типы-задач)\n  - [Установка](#установка)\n  - [Зависимости](#зависимости)\n  - [Использование](#использование)\n  - [Тестирование](#тестирование)\n  - [Доступные методы](#доступные-методы)\n  - [Кастомные исключения](#кастомные-исключения)\n  - [Устранение неполадок](#устранение-неполадок)\n  - [Ссылки](#ссылки)\n\n\n## Как работает UNU?\n\n* Регистрируетесь на сайте\n* Добавляете задание и оплачиваете необходимое количество работ\n* Получаете результат и проверяете выполненные работы\n\n## Доступные типы задач\n\n![This is an image](https://unu.im/files/image.svg)\n* Наполнение сайтов: комментарии, отзывы, форумы, доски объявлений\n* Продвижение в социальных сетях: подписчики в группы, лайки, репосты\n* Продвижение приложений: установки и действия\n* Любые произвольные задачи, которые нужно выполнять на регулярной основе\n\n## Установка\n\n```shell\npip install unu_api\n```\n\n## Зависимости\n\nНа данный момент библиотека зависит только от ```requests```\n\n## Использование\n\nПолучите токен в личном кабинете на сайте https://unu.im/api-info и инициализируйте класс для работы с API\n\n```python\nfrom unu_api import Api\n\nu = Api(token="ВАШ_ТОКЕН")\n\nrequest = u.get_balance()\n```\n\n## Тестирование\n\nПротестировать библиотеку можно запустив команду pytest указав в переменной окружения ваш API_KEY\n\n```shell\nAPI_KEY=ВАШ_ТОКЕН pytest\n```\n## Доступные методы\n\nРеализован полный набор методов доступный в официальном API\n\n* **get_balance** - Возвращает количество доступных средств\n* **get_folders** - Возвращает все созданные папки с задачами\n* **create_folder** - Создаёт новую папку\n* **move_task** - Перемещает задачу в указанную папку\n* **get_tasks** - Возвращает существующие задачи\n* **get_reports** - Возвращает отчёты по определённой задаче или все существующие отчёты\n* **approve_report** - Принимает (оплачивает) отчёт по заданию\n* **reject_report** - Отклоняет отчёт по заданию\n* **get_expenses** - Возврашает сумму израсходованных средств\n* **add_task** - Создаёт новую задачу\n* **task_limit_add** - Устанавливает лимит (добавляет выполнения) определённой задачи\n* **edit_task** - Редактирует существующую задачу\n* **get_tariffs** - Возвращает все доступные тарифы\n* **task_pause** - Приостанавливает выполнение задачи\n* **task_play** - Активирует выполнение задачи\n* **get_minter_wallet** - Возвращает адрес Minter-кошелька для пополнения баланса аккаунта\n\n## Кастомные исключения\n\nМне пришлось реализовать кастомный набор ошибок для удобства разработки.\n\n* **AuthError** - Исключение при отсутствие токена\n* **BalanceError** - Исключения при отрицательном балансе\n* **RequestError** - Исключение для неуспешных запросов к API\n* **JsonParsingError** - Исключение для ошибок декодирования Json\n* **UnknowError** - Для неизвестных ошибок\n\n## Устранение неполадок\n\nВремя от времени могут переставать работать определенные методы. Вместо json будет в ответ прилетать лог ошибки php, обычно я пишу в поддержку на сайте и разработчики фиксят эти баги. Для этого кейса я ввел кастомное исключение **JsonParsingError**.\n\n## Ссылки\n\nСайт биржи - https://unu.im\n\nБлог автора - https://egorovegor.ru\n\nСсылка на GitHub - https://github.com/r4hx/unu_api/\n\nСсылка на PyPi - https://pypi.org/project/unu_api/\n',
    'author': 'Egorov Egor',
    'author_email': None,
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://egorovegor.ru',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.5,<4.0',
}


setup(**setup_kwargs)
